name: On Push
on: [push]

jobs:
  ImageName:
    runs-on: ubuntu-latest
    outputs:
      branch-image: ${{ steps.branch-image.outputs.img }}
      trunk-image: ${{ steps.trunk-image.outputs.img }}
    steps:
      - name: Branch Image
        id: branch-image
        run: |
          IMAGE_TAG_LOWER=$(echo "${{ github.event.repository.name }}:${{ github.ref_name }}" | tr '[:upper:]' '[:lower:]')
          echo "::set-output name=img::ghcr.io/archieatkinson/$IMAGE_TAG_LOWER"

      - name: Trunk Image
        id: trunk-image
        run: |
          echo "::set-output name=img::ghcr.io/archieatkinson/trunk"

  Docker:
    runs-on: ubuntu-latest
    needs: [ImageTag]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - uses: nrwl/nx-set-shas@v4
        id: last_successful_commit_push
        with:
          main-branch-name: ${{ github.ref_name }} 

      - name: Has dockerfile changed
        id: Has-dockerfile-changed
        uses: tj-actions/changed-files@v44
        with:
          base_sha: ${{ steps.last_successful_commit_push.outputs.base }}
          files: '.devcontainer/Dockerfile'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker File
        if: steps.Has-dockerfile-changed.outputs.any_changed == 'true'
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          file: .devcontainer/Dockerfile
          tags: ${{needs.ImageName.outputs.branch-image}}

      - name: Select New Dockerfile
        if: steps.Has-dockerfile-changed.outputs.any_changed == 'true'
        run: echo "IMAGE_TO_USE=${{needs.ImageName.outputs.branch-image}}" >> $GITHUB_ENV

      - name: Select New Dockerfile
        if: steps.Has-dockerfile-changed.outputs.any_changed != 'true'
        run: echo "IMAGE_TO_USE=${{needs.ImageName.outputs.trunk-image}}" >> $GITHUB_ENV


  Build:
    needs: [Docker, ImageName]
    runs-on: ubuntu-latest
    container:
      image: ${{needs.ImageName.outputs.branch-image}}
      credentials:
        username: ${{github.actor}}
        password: ${{ secrets.GITHUB_TOKEN }}
    defaults:
      run:
        working-directory: /home/user/west-workspace/notus

    steps:   
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - name: Setup Env
        run: |
          mv $GITHUB_WORKSPACE/* /home/user/west-workspace/notus
          mv $GITHUB_WORKSPACE/.[!.]* /home/user/west-workspace/notus
          chmod 777 -R /home/user/west-workspace/notus
          echo "ZEPHYR_SDK_INSTALL_DIR=/opt/toolchains/zephyr-sdk-$ZSDK_VERSION" >> $GITHUB_ENV
          git config --global --add safe.directory "*"
          west update
        
      - name: Make west happy
        run: west update

      - name: Build
        run: twister -c --coverage -T . --platform native_sim

      - name: Upload
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: twister_out
          path: /home/user/west-workspace/notus/twister-out/